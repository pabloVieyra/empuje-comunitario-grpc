// <auto-generated />
using System;
using EmpujeComunitario.Graphql.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmpujeComunitario.Graphql.DataAccess.Migrations
{
    [DbContext(typeof(MessageFlowDbContext))]
    [Migration("20251021232002_tableFilters")]
    partial class tableFilters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("OfferId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TransferId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("RequestId");

                    b.HasIndex("TransferId");

                    b.ToTable("DonationItems");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationOffer", b =>
                {
                    b.Property<Guid>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DonationOrganizationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OfferId");

                    b.ToTable("DonationOffers");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationRequest", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<string>("RequesterOrgId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RequestId");

                    b.ToTable("DonationRequests");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationTransfer", b =>
                {
                    b.Property<Guid>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DonationOrgId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TransferId");

                    b.HasIndex("RequestId");

                    b.ToTable("DonationTransfers");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.UserSavedFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Filter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_UserSavedFilters_UserId");

                    b.ToTable("UserSavedFilters", (string)null);
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationItem", b =>
                {
                    b.HasOne("EmpujeComunitario.Graphql.DataAccess.Entities.DonationOffer", "Offer")
                        .WithMany("Donations")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmpujeComunitario.Graphql.DataAccess.Entities.DonationRequest", "Request")
                        .WithMany("Donations")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmpujeComunitario.Graphql.DataAccess.Entities.DonationTransfer", "Transfer")
                        .WithMany("Donations")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Offer");

                    b.Navigation("Request");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationTransfer", b =>
                {
                    b.HasOne("EmpujeComunitario.Graphql.DataAccess.Entities.DonationRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationOffer", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationRequest", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("EmpujeComunitario.Graphql.DataAccess.Entities.DonationTransfer", b =>
                {
                    b.Navigation("Donations");
                });
#pragma warning restore 612, 618
        }
    }
}
